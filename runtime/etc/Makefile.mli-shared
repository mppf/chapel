# Copyright 2004-2019 Cray Inc.
# Other additional copyright holders may be indicated within.
#
# The entirety of this work is licensed under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
#
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Makefile.mli-shared
#

include $(CHPL_MAKE_HOME)/runtime/etc/Makefile.include

CHPL_MLI_INCS = -I$(CHPL_ZMQ_LOC)/include
CHPL_LN_LIB_DIR = $(CHPL_MAKE_RUNTIME_LIB)/$(CHPL_MAKE_LAUNCHER_SUBDIR)
UNAME = $(shell uname)

.PHONY: buildUserObj buildServer buildClient runTagsCommand

all: buildUserObj buildServer buildClient runTagsCommand FORCE

buildUserObj:
#
# Compile loose C source files in CHPLUSEROBJ.
#
	$(foreach srcFile, $(CHPLUSEROBJ), \
		$(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) \
			-c -o $(srcFile) $(CHPL_RT_INC_DIR) $(srcFile).c \
	;)

buildServer: $(TMPSERVERNAME)

buildClient: $(TMPBINNAME)

runTagsCommand:
	$(TAGS_COMMAND)

$(TMPBINNAME): $(CHPL_CL_OBJS) FORCE
#
# Invoke the launcher script, but don't actually link up the launcher binary.
# Do this by setting CHPL_MAKE_IS_MLI=1.
#
	$(MAKE) -f $(CHPL_MAKE_HOME)/runtime/etc/Makefile.launcher all \
		CHPL_MAKE_HOME=$(CHPL_MAKE_HOME) \
		TMPBINNAME=$(TMPSERVERNAME) \
		BINNAME=$(SERVERNAME) \
		TMPDIRNAME=$(TMPDIRNAME) \
		CHPL_MAKE_RUNTIME_LIB=$(CHPL_MAKE_RUNTIME_LIB) \
		CHPL_MAKE_RUNTIME_INCL=$(CHPL_MAKE_RUNTIME_INCL) \
		CHPL_MAKE_THIRD_PARTY=$(CHPL_MAKE_THIRD_PARTY) \
		CHPL_MAKE_IS_MLI=1
#
# Compile the client bundle. Note the use of $(SHARED_LIB_CFLAGS) here.
#
ifdef CHPL_ZMQ_HOME
	$(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) \
		$(SHARED_LIB_CFLAGS) \
		-c -o $(TMPBINNAME).o \
		$(CHPLSRC) \
		$(COMP_GEN_MLI_EXTRA_INCLUDES) \
		$(CHPL_RT_INC_DIR) \
		$(CHPL_MLI_INCS)
else
	$(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) \
		$(SHARED_LIB_CFLAGS) \
		-c -o $(TMPBINNAME).o \
		$(CHPLSRC) \
		$(COMP_GEN_MLI_EXTRA_INCLUDES) \
		$(CHPL_RT_INC_DIR)
endif
#
# Invoke the linker to produce a shared library.
#
ifdef CHPL_ZMQ_HOME
	$(LD) $(CHPL_MAKE_BASE_LFLAGS) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) \
		$(LIB_DYNAMIC_FLAG) \
		-o $(TMPBINNAME) \
		$(TMPBINNAME).o $(TMPSERVERNAME)_launcher.o \
		$(CHPLUSEROBJ) $(CHPL_CL_OBJS) \
		-L$(CHPL_LN_LIB_DIR) \
		-lm -lchpllaunch \
		$(LAUNCH_LIBS) \
		-L$(CHPL_ZMQ_LOC)/lib \
		-lzmq
else
	$(LD) $(CHPL_MAKE_BASE_LFLAGS) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) \
		$(LIB_DYNAMIC_FLAG) \
		-o $(TMPBINNAME) \
		$(TMPBINNAME).o $(TMPSERVERNAME)_launcher.o \
		$(CHPLUSEROBJ) $(CHPL_CL_OBJS) \
		-L$(CHPL_LN_LIB_DIR) \
		-lm -lchpllaunch \
		$(LAUNCH_LIBS) \
		-lzmq
endif
#
# Last minute munging in case of output file name collisions.
#
ifneq ($(TMPBINNAME),$(BINNAME))
	cp $(TMPBINNAME) $(BINNAME)
	rm $(TMPBINNAME)
endif
#
# On Darwin, we need to adjust the "install_name" of the final shared library
# file so that it points to $(BINNAME) and not $(TMPBINNAME). If we don't,
# `dyld` will emit an error of the form "library not loaded because image
# was not found".
#
ifeq ($(UNAME),Darwin)
	install_name_tool $(BINNAME) -id "$(BINNAME)"
endif

$(TMPSERVERNAME): $(CHPL_CL_OBJS) checkRtLibDir FORCE
ifneq ($(SKIP_COMPILE_LINK),skip)
#
# Compile the server bundle.
#
ifdef CHPL_ZMQ_HOME
	$(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) \
		-c -o $(TMPSERVERNAME).o \
		$(CHPLSERVERSRC) \
		$(CHPL_RT_INC_DIR) \
		$(CHPL_MLI_INCS) \
		$(COMP_GEN_MLI_EXTRA_INCLUDES)
else
	$(CC) $(CHPL_MAKE_BASE_CFLAGS) $(GEN_CFLAGS) $(COMP_GEN_CFLAGS) \
		-c -o $(TMPSERVERNAME).o \
		$(CHPLSERVERSRC) \
		$(CHPL_RT_INC_DIR) \
		$(COMP_GEN_MLI_EXTRA_INCLUDES)
endif
#
# Link the Chapel runtime and the ZMQ library together into a multi-locale
# executable.
#
#   - $(LIBS) contains gasnet libraries when CHPL_COMM=gasnet, and nothing
#     otherwise.
#   - $(CHPL_MAKE_THIRD_PARTY_LINK_ARGS) is every third party library.
#   ^ With the exception of gasnet!
#
ifdef CHPL_ZMQ_HOME
	$(LD) $(CHPL_MAKE_BASE_LFLAGS) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) \
		$(GEN_DYNAMIC_FLAG) \
		-o $(TMPSERVERNAME) \
		$(TMPSERVERNAME).o $(CHPL_RT_LIB_DIR)/main_mli.o \
		$(CHPLUSEROBJ) $(CHPL_CL_OBJS) \
		$(CHPL_MAKE_THIRD_PARTY_LINK_ARGS) \
		$(LIBS) \
		-L$(CHPL_RT_LIB_DIR) \
		-lchpl -lm \
		-L$(CHPL_ZMQ_LOC)/lib \
		-lzmq
else
	$(LD) $(CHPL_MAKE_BASE_LFLAGS) $(GEN_LFLAGS) $(COMP_GEN_LFLAGS) \
		$(GEN_DYNAMIC_FLAG) \
		-o $(TMPSERVERNAME) \
		$(TMPSERVERNAME).o $(CHPL_RT_LIB_DIR)/main_mli.o \
		$(CHPLUSEROBJ) $(CHPL_CL_OBJS) \
		$(CHPL_MAKE_THIRD_PARTY_LINK_ARGS) \
		$(LIBS) \
		-L$(CHPL_RT_LIB_DIR) \
		-lchpl -lm \
		-lzmq
endif
endif

FORCE:
